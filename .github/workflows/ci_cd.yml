name: '[🧪🏗️🚀] CI/CD'
# Workflow to build, test, lint, and deploy application(s)
#   When more applications added to the monorepo, will
#   try to use strategies to include new applications in
#   this workflow. Should be fun.
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

permissions:
  id-token: write
  contents: write
  pull-requests: write
  security-events: write

jobs:
  # prepare the deployment parameters
  prep:
    name: '🛠️'
    uses: './.github/workflows/_workflow.jobs.preparation.yml'
    with:
      bicep_main_file: './.biceps/main.bicep'
      resource_group: 'blog-rg'
      location: 'westeurope'
      app_name: 'blog'
      branch_name: ${{ github.head_ref || github.ref_name }}

  # lint, test, and build the blog application
  lint_test_build:
    if: |
      (github.event_name == 'pull_request' && github.event.action != 'closed') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    name: '🧪 | 🏗️'
    needs:
      - prep
    uses: './.github/workflows/_workflow.jobs.lint_test_build_affected.yml'
    with:
      project_name: 'blog'
      build_location: 'dist/apps/blog'
      infra_affected: ${{ needs.prep.outputs.infra_affected }}
      project_affected: ${{ needs.prep.outputs.app_affected }}
      nx_base: ${{ needs.prep.outputs.nx_base }}
    secrets: inherit

  # deploy static web app using /.biceps/main.bicep
  infra:
    if: |
      (github.event_name == 'pull_request' && github.event.action != 'closed') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    name: '🏭'
    needs:
      - prep
    uses: './.github/workflows/_workflow.jobs.infra.yml'
    with:
      parameters: ${{ needs.prep.outputs.parameters }}
      app_name: ${{ needs.prep.outputs.app_name }}
      bicep_main_file: ${{ needs.prep.outputs.bicep_main_file }}
      infra_affected: ${{ needs.prep.outputs.infra_affected }}
    secrets: inherit

  # deploy the blog application
  deploy_app:
    needs:
      - prep
      - lint_test_build
      - infra
    if: |
      always() &&
      (needs.prep.outputs.infra_affected == 'No' || needs.infra.result == 'success') &&
      needs.lint_test_build.result == 'success' &&
      needs.lint_test_build.outputs.uploaded_artifacts == 'Yes' &&
      github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: 'Deploy app 🚀'
    steps:
      - name: 'AZ CLI login 🔑'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Get API key 🔑'
        id: static_web_app_apikey
        uses: azure/CLI@v2
        with:
          inlineScript: |
            apiKey=$(az staticwebapp secrets list \
              --name '${{ needs.prep.outputs.app_name }}-static-web-app' \
              | jq -r '.properties.apiKey')
            echo "api_key=$apiKey" >> $GITHUB_OUTPUT

      - name: 'Download artifacts 📥'
        uses: actions/download-artifact@v4
        with:
          name: compiled-app
          path: dist

      - name: 'Publish SWA 🚀'
        id: publish_swa
        uses: azure/static-web-apps-deploy@v1
        if: steps.static_web_app_apikey.outputs.api_key != ''
        with:
          azure_static_web_apps_api_token: ${{ steps.static_web_app_apikey.outputs.api_key }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'dist/browser'
          api_location: '' # Empty for now, no API to deploy
          skip_app_build: true
    outputs:
      deployed_url: ${{ steps.publish_swa.outputs.static_web_app_url }}

  # clean up the staging deployment
  clean_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    uses: './.github/workflows/_workflow.jobs.clean_pull_request.yml'
    name: '🧹'
    needs:
      - prep
    with:
      app_name: ${{ needs.prep.outputs.app_name }}
    secrets: inherit

  # run post deployment checks
  post_deploy:
    uses: './.github/workflows/_workflow.jobs.post_deploy.yml'
    name: '🧪 🚀'
    needs:
      - deploy_app
    if: |
      always() &&
      needs.deploy_app.result == 'success' &&
      github.event.action != 'closed'
    with:
      deployment_url: ${{ needs.deploy_app.outputs.deployed_url }}
      audit_urls: |
        ${{ needs.deploy_app.outputs.deployed_url }}/
        ${{ needs.deploy_app.outputs.deployed_url }}/about-me
        ${{ needs.deploy_app.outputs.deployed_url }}/development-notes
        ${{ needs.deploy_app.outputs.deployed_url }}/not/found

  ci_status:
    name: 'CI Status ✅'
    runs-on: ubuntu-latest
    needs:
      - lint_test_build
      - infra
      - deploy_app
      - post_deploy
    if: always()
    steps:
      - name: 'lint_test_build failed'
        if: needs.lint_test_build.result == 'failure'
        run: exit 1

      - name: 'infra failed'
        if: needs.infra.result == 'failure'
        run: exit 1

      - name: 'deploy_app failed'
        if: needs.deploy_app.result == 'failure'
        run: exit 1

      - name: 'post_deploy failed'
        if: needs.post_deploy.result == 'failure'
        run: exit 1

      - name: 'checks completed'
        run: echo "All checks done"
