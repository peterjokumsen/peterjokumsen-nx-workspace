name: 'All - Lint & Test 🧪'

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  workflow_dispatch:
    inputs:
      tests:
        description: 'Run Tests'
        required: false
        default: 'Yes'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'
      lint_code:
        description: 'Run Linters'
        required: false
        default: 'Yes'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'
      lint_biceps:
        description: 'Lint Bicep files'
        required: false
        default: 'No'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'

permissions:
  id-token: write
  contents: write
  pull-requests: write
  security-events: write

env:
  bicep_main_file: ./.biceps/main.bicep
  resource_group: 'testing'
  app_name: 'test-workflow'
  branch_name: ${{ github.head_ref || github.ref_name }}
  projects_to_build: 'blog' # comma-separated list of projects to build

jobs:
  env_prep:
    runs-on: ubuntu-latest
    name: 'Prepare ENV 🛠️'
    steps:
      - name: 'Prepare outputs ⬆️'
        id: prepare_names
        run: |
          echo "bicep_main_file=${{ env.bicep_main_file }}" >> $GITHUB_OUTPUT
          echo "resource_group=${{ env.resource_group }}" >> $GITHUB_OUTPUT
          echo "app_name=${{ env.app_name }}" >> $GITHUB_OUTPUT
          echo "branch_name=${{ env.branch_name }}" >> $GITHUB_OUTPUT
          echo "projects_to_build=${{ env.projects_to_build }}" >> $GITHUB_OUTPUT
    outputs:
      bicep_main_file: ${{ steps.prepare_names.outputs.bicep_main_file }}
      resource_group: ${{ steps.prepare_names.outputs.resource_group }}
      app_name: ${{ steps.prepare_names.outputs.app_name }}
      branch_name: ${{ steps.prepare_names.outputs.branch_name }}
      projects_to_build: ${{ steps.prepare_names.outputs.projects_to_build }}

  prep:
    uses: './.github/workflows/workflow-prep.yml'
    name: 'Prepare 🛠️'
    needs:
      - env_prep
    with:
      branch_name: ${{ needs.env_prep.outputs.branch_name }}
      resource_group: ${{ needs.env_prep.outputs.resource_group }}
      app_name: ${{ needs.env_prep.outputs.app_name }}

  lint_biceps:
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.lint_biceps == 'Yes') ||
      (github.event_name == 'pull_request' && github.event.action != 'closed') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    needs:
      - env_prep
      - prep
    name: 'Lint Bicep 💪'
    steps:
      - name: 'Checkout 📥'
        uses: actions/checkout@v4

      - name: 'AZ CLI login 🔑'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Lint Bicep 🔍'
        if: github.event_name != 'push'
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az version
            az bicep install
            az bicep version
            az bicep lint --file ${{ needs.env_prep.outputs.bicep_main_file }} --diagnostics-format sarif > bicep.sarif
            echo '::group::Bicep linting results'
            cat bicep.sarif
            echo '::endgroup::'

      - name: 'Upload SARIF ↗️'
        if: |
          (success() || failure()) &&
          github.event_name != 'push'
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: bicep
          sarif_file: bicep.sarif

  test_and_lint:
    if: |
      (github.event_name != 'workflow_dispatch' || (inputs.tests == 'Yes' || inputs.lint_code == 'Yes')) &&
      github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: 'Test & lint 🧪'
    steps:
      - name: 'Checkout 📥'
        uses: actions/checkout@v4
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0
          submodules: true

      - name: 'Install dependencies 📦'
        uses: ./.github/actions/install-deps

      - name: 'Lint all 🧹'
        if: github.event_name != 'workflow_dispatch' || inputs.lint_code == 'Yes'
        run: |
          echo "running: npx nx run-many -t lint --all"
          npx nx run-many -t lint --all
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0

      - name: 'Test all 🧪'
        if: always() && (github.event_name != 'workflow_dispatch' || inputs.lint_code == 'Yes')
        run: |
          echo "running: npx nx run-many -t test -c ci --all"
          npx nx run-many -t test -c ci --all
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
