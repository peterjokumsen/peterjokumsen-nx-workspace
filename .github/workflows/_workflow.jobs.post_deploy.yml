name: '[♻️] post_deploy'
# This workflow executes post deployment tasks
on:
  workflow_call:
    inputs:
      deployment_url:
        description: 'Deployment URL'
        required: true
        type: string
      audit_urls:
        description: 'Urls to test'
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  # wait for the deployment to return a successful response
  wait_for_deployment:
    name: 'Wait for deployment ⌚'
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: 'Wait for preview ${{ inputs.deployment_url }} ⌚'
        uses: nev7n/wait_for_response@v1
        with:
          url: '${{ inputs.deployment_url }}'
          responseCode: 200
          timeout: 300000
          interval: 1000

  # run lighthouse audit on the provided URLs
  # and output the results as a comment on the PR
  # uses config from .github/lighthouse/lighthouse.config.json
  lighthouse_report_job_matrix:
    name: 'Lighthouse report 💡🏠'
    runs-on: ubuntu-latest
    needs:
      - wait_for_deployment
    steps:
      - uses: actions/checkout@v4

      - name: Audit URLs 🧐
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: ${{ inputs.audit_urls }}
          configPath: ./.github/lighthouse/lighthouse.config.json
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 1

      - name: 'Format lighthouse score ✏️'
        id: format_lighthouse_score
        uses: actions/github-script@v7
        with:
          script: |
            const lighthouseCommentMaker = require('./.github/lighthouse/lighthouse-report.parser.js');

            const lighthouseOutputs = {
              manifest: ${{ steps.lighthouse_audit.outputs.manifest }},
              links: ${{ steps.lighthouse_audit.outputs.links }},
            };

            const comment = lighthouseCommentMaker({ lighthouseOutputs }, core.summary);
            core.setOutput("comment", comment);

      - name: Add Lighthouse stats as comment ✍️
        id: comment_to_pr
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: ${{ steps.format_lighthouse_score.outputs.comment }}

  # placeholder for end-to-end tests
  end_to_end_tests:
    name: 'End-to-end tests 🧪'
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    needs:
      - wait_for_deployment
    steps:
      - name: 'Placeholder for end-to-end tests 🧪'
        run: echo "No end-to-end tests configured, yet."
      # - name: 'Checkout 📥'
      #   uses: actions/checkout@v4

      # - name: 'Install dependencies 📦'
      #   uses: ./.github/actions/install-deps

      # - name: 'Run end-to-end tests 🧪'
      #   run: |
      #     echo "running: npx nx run-many -t e2e --all"
      #     npx nx run-many -t e2e --all
      #   env:
      #     NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
