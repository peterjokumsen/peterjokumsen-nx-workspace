name: '[🚀] Blog build & deploy'

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_bicep:
        description: 'Lint & Deploy Bicep files'
        required: false
        default: 'No'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'
      test_affected:
        description: 'Test affected'
        required: false
        default: 'Yes'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'
      build_and_deploy:
        description: 'Build and deploy application'
        required: false
        default: 'Yes'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'

permissions:
  id-token: write
  contents: write
  pull-requests: write
  security-events: write

jobs:
  prep:
    uses: './.github/workflows/_workflow.jobs.preparation.yml'
    name: 'Prepare 🛠️'
    with:
      bicep_main_file: './.biceps/main.bicep'
      resource_group: 'blog-rg'
      location: 'westeurope'
      app_name: 'blog'
      branch_name: ${{ github.head_ref || github.ref_name }}

  lint_test_build:
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.test_affected == 'Yes') ||
      (github.event_name == 'pull_request' && github.event.action != 'closed') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    uses: './.github/workflows/_workflow.jobs.lint_test_build_affected.yml'
    name: 'Test 🧪'
    needs:
      - prep
    with:
      bicep_parameters: ${{ needs.prep.outputs.parameters }}
      bicep_main_file: ${{ needs.prep.outputs.bicep_main_file }}
      build_location: 'dist/apps/blog'
    secrets: inherit

  infra:
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.deploy_bicep == 'Yes') ||
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    uses: './.github/workflows/_workflow.jobs.infra.yml'
    name: 'Infra 💪'
    needs:
      - prep
    with:
      parameters: ${{ needs.prep.outputs.parameters }}
      app_name: ${{ needs.prep.outputs.app_name }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  deploy_app:
    needs:
      - prep
      - lint_test_build
      - deploy_bicep
    if: |
      needs.lint_test_build.outputs.uploaded_artifacts != 'No' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: 'Deploy app 🚀'
    steps:
      - name: 'AZ CLI login 🔑'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Get API key 🔑'
        id: static_web_app_apikey
        uses: azure/CLI@v2
        with:
          inlineScript: |
            apiKey=$(az staticwebapp secrets list \
              --name '${{ needs.prep.outputs.app_name }}-static-web-app' \
              | jq -r '.properties.apiKey')
            echo "api_key=$apiKey" >> $GITHUB_OUTPUT

      - name: 'Download artifacts 📥'
        uses: actions/download-artifact@v4
        with:
          name: compiled-app
          path: dist

      - name: 'Publish SWA 🚀'
        id: publish_swa
        uses: azure/static-web-apps-deploy@v1
        if: steps.static_web_app_apikey.outputs.api_key != ''
        with:
          azure_static_web_apps_api_token: ${{ steps.static_web_app_apikey.outputs.api_key }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'dist/browser'
          api_location: '' # Empty for now, no API to deploy
          skip_app_build: true

    outputs:
      deployed_url: ${{ steps.publish_swa.outputs.static_web_app_url }}

  post_deploy:
    uses: './.github/workflows/_workflow.jobs.post_deploy.yml'
    name: 'Post deploy 🚀'
    needs:
      - deploy_app
    with:
      deployment_url: ${{ needs.deploy_app.outputs.deployed_url }}
      audit_urls: |
        ${{ needs.deploy_app.outputs.deployed_url }}/
        ${{ needs.deploy_app.outputs.deployed_url }}/development-notes
        ${{ needs.deploy_app.outputs.deployed_url }}/not/found
