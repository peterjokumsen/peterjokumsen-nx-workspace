name: 'Blog - Build and Deploy 🏗️'

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      lint_biceps:
        description: 'Lint Bicep files'
        required: false
        default: 'No'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'
      test_and_lint:
        description: 'Test and lint application'
        required: false
        default: 'Yes'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'
      build_and_deploy:
        description: 'Build and deploy application'
        required: false
        default: 'Yes'
        type: 'choice'
        options:
          - 'Yes'
          - 'No'

permissions:
  id-token: write
  contents: write
  pull-requests: write
  security-events: write

env:
  BICEP_MAIN_FILE: ./.biceps/main.bicep
  RESOURCE_GROUP: blog-rg
  LOCATION: westeurope
  STATICWEBAPPNAME: blog.peterjokumsen.com
  ROOTCUSTOMDOMAINNAME: peterjokumsen.com
  BLOGCUSTOMDOMAINNAME: blog.peterjokumsen.com
  TAGS: '{"app":"peterjokumsen-blog"}'
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  PROJECTS_TO_BUILD: 'blog' # comma-separated list of projects to build

jobs:
  lint_biceps:
    if: |
      (github.event_name == 'pull_request' && github.event.action != 'closed') ||
      (github.event_name == 'workflow_dispatch' && inputs.lint_biceps == 'Yes')
    runs-on: ubuntu-latest
    name: 'Lint Bicep 🔍'
    steps:
      - name: 'Checkout 📥'
        uses: actions/checkout@v4

      - name: 'AZ CLI login 🔑'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Lint Bicep 🔍'
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az version
            az bicep install
            az bicep version
            az bicep lint --file ${{ env.BICEP_MAIN_FILE }} --diagnostics-format sarif > bicep.sarif
            echo '::group::Bicep linting results'
            cat bicep.sarif
            echo '::endgroup::'

      - name: 'Upload SARIF ↗️'
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: bicep
          sarif_file: bicep.sarif

  test_and_lint:
    if: |
      (github.event_name != 'workflow_dispatch' || inputs.test_and_lint == 'Yes') &&
      github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: 'Test & lint 🧪'
    steps:
      - name: 'Checkout 📥'
        uses: actions/checkout@v4
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0
          submodules: true

      - name: 'Install dependencies 📦'
        uses: ./.github/actions/install-deps

      - name: 'Lint all 🧹'
        run: |
          echo "::command::npx nx run-many -t lint --all"
          npx nx run-many -t lint --all
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0

      - name: 'Test all 🧪'
        if: always()
        run: |
          echo "::command::npx nx run-many -t test -c ci --all"
          npx nx run-many -t test -c ci --all
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0

  build_and_deploy_swa_job:
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.build_and_deploy == 'Yes') ||
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: 'Build and deploy 🏗️'
    steps:
      - name: 'Checkout 📥'
        uses: actions/checkout@v4
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0
          submodules: true

      - name: 'AZ CLI login 🔑'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Set deployment name 📝'
        id: deployment_name
        run: |
          GIT_SHA='${{ github.sha }}'
          SHORT_SHA=${GIT_SHA:0:7}
          BRANCH_NAME='${{ env.BRANCH_NAME }}'

          DEPLOYMENT_NAME="${BRANCH_NAME////-}.$SHORT_SHA"

          echo "Using deployment name: $DEPLOYMENT_NAME"
          echo "generated_name=$DEPLOYMENT_NAME" >> $GITHUB_OUTPUT

      - name: 'Install dependencies 📦'
        uses: ./.github/actions/install-deps
        with:
          nx-cache-key: 'nx-build'

      - name: 'Build app(s) 🏗️'
        run: |
          echo "::command::npx nx run-many -t build --projects=${{ env.PROJECTS_TO_BUILD }}"
          npx nx run-many -t build --projects=${{ env.PROJECTS_TO_BUILD }}
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
